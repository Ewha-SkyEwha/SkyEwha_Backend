"""initial migration

Revision ID: aa876a570f4a
Revises: 
Create Date: 2025-07-26 14:31:48.515524

"""
from typing import Sequence, Union

from alembic import op
import pgvector
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa876a570f4a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=50), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('user_nickname', sa.String(length=50), nullable=False),
    sa.Column('user_provider', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_is_active', sa.Boolean(), nullable=True),
    sa.Column('user_last_login', sa.DateTime(), nullable=True),
    sa.Column('user_social_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_social_id'),
    sa.UniqueConstraint('user_social_id', 'user_provider', name='uix_social_provider')
    )
    op.create_index(op.f('ix_users_user_email'), 'users', ['user_email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_user_nickname'), 'users', ['user_nickname'], unique=False)
    op.create_table('youtube_videos',
    sa.Column('video_id', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('channel_title', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('thumbnail_url', sa.Text(), nullable=True),
    sa.Column('video_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('video_id')
    )
    op.create_index(op.f('ix_youtube_videos_video_id'), 'youtube_videos', ['video_id'], unique=False)
    op.create_table('videos',
    sa.Column('video_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('video_title', sa.String(), nullable=False),
    sa.Column('upload_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('video_id')
    )
    op.create_index(op.f('ix_videos_video_id'), 'videos', ['video_id'], unique=False)
    op.create_table('keywords',
    sa.Column('keyword_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('keyword', sa.String(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['videos.video_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('keyword_id')
    )
    op.create_index(op.f('ix_keywords_keyword_id'), 'keywords', ['keyword_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_keywords_keyword_id'), table_name='keywords')
    op.drop_table('keywords')
    op.drop_index(op.f('ix_videos_video_id'), table_name='videos')
    op.drop_table('videos')
    op.drop_index(op.f('ix_youtube_videos_video_id'), table_name='youtube_videos')
    op.drop_table('youtube_videos')
    op.drop_index(op.f('ix_users_user_nickname'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_user_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
