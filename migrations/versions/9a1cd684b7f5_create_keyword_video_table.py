"""Create keyword, video table

Revision ID: 9a1cd684b7f5
Revises: 392a0dc72f05
Create Date: 2025-07-24 00:33:17.128702

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a1cd684b7f5'
down_revision: Union[str, Sequence[str], None] = '392a0dc72f05'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_user_email'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_user_nickname'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('user_nickname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('user_provider', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('user_is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_social_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name=op.f('users_pkey')),
    sa.UniqueConstraint('user_social_id', 'user_provider', name=op.f('uix_social_provider'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('user_social_id', name=op.f('users_user_social_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_users_user_nickname'), 'users', ['user_nickname'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_user_email'), 'users', ['user_email'], unique=True)
    # ### end Alembic commands ###
